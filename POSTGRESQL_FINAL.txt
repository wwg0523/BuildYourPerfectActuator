🚀 **Synology NAS PostgreSQL 테이블 생성 - 최종 정리**

---

## ⚡ 즉시 실행 (copy & paste)

**Windows PowerShell (관리자 권한)에서 아래 명령어 실행:**

```powershell
docker exec postgres psql -U postgres -d sacrp_production -c "CREATE TABLE IF NOT EXISTS leaderboard_entries (id UUID PRIMARY KEY, user_id UUID, player_name TEXT NOT NULL, company TEXT, score INT NOT NULL, completion_time BIGINT NOT NULL, time_bonus INT DEFAULT 0, final_score INT NOT NULL, played_at TIMESTAMPTZ DEFAULT NOW()); CREATE TABLE IF NOT EXISTS email_logs (id UUID PRIMARY KEY, user_id UUID, email_type VARCHAR(50) NOT NULL, recipient_email TEXT NOT NULL, sent_at TIMESTAMPTZ DEFAULT NOW(), success BOOLEAN NOT NULL, error_message TEXT); CREATE TABLE IF NOT EXISTS api_counter_logs (id UUID PRIMARY KEY, api_endpoint VARCHAR(255), action VARCHAR(50), success BOOLEAN, response_data JSONB, created_at TIMESTAMPTZ DEFAULT NOW()); CREATE INDEX IF NOT EXISTS idx_leaderboard_entries_score_time ON leaderboard_entries(score DESC, completion_time ASC, played_at ASC); CREATE INDEX IF NOT EXISTS idx_leaderboard_entries_played_at ON leaderboard_entries(played_at DESC); CREATE INDEX IF NOT EXISTS idx_email_logs_user_id ON email_logs(user_id); CREATE INDEX IF NOT EXISTS idx_email_logs_sent_at ON email_logs(sent_at DESC); CREATE INDEX IF NOT EXISTS idx_api_counter_logs_created_at ON api_counter_logs(created_at DESC);"
```

---

## ✅ 확인 명령어

```powershell
docker exec postgres psql -U postgres -d sacrp_production -c "\dt leaderboard_entries email_logs api_counter_logs"
```

---

## 📊 생성되는 테이블

| 테이블 | 용도 | 핵심 필드 |
|--------|------|---------|
| **leaderboard_entries** | 리더보드 데이터 저장 | id, player_name, score, completion_time, final_score |
| **email_logs** | 이메일 발송 로그 | id, user_id, recipient_email, success |
| **api_counter_logs** | API 호출 로그 (향후) | id, api_endpoint, success |

---

## 🔄 현재 코드와의 연동

백엔드 코드(`routes/game.ts`)가 다음을 수행:

```typescript
// 1. POST /api/game/leaderboard 
// → leaderboard_entries 테이블에 INSERT

// 2. GET /api/game/leaderboard
// → leaderboard_entries 테이블에서 SELECT

// 프론트엔드 코드(LeaderboardManager)가:
// 1. 점수 계산
// 2. POST로 리더보드 항목 전송
// 3. GET으로 순위 조회
// 4. 이메일 발송 (email_logs에 기록)
```

---

## 🎯 404 에러 해결 순서

1. ✅ SQL 실행 (테이블 생성)
2. ✅ 테이블 존재 확인
3. ✅ 게임 완료 후 결과 제출
4. ✅ 리더보드 조회
5. ✅ 404 사라짐 ✓

---

## 📝 추가 참고

- 상세 가이드: `QUICK_START_POSTGRESQL.md`
- SQL 파일: `actuator-back/sql/CREATE_TABLES.sql`
- 자동 스크립트: `create_tables.bat`

---

## ✨ 완료!

테이블 생성 후 서버를 재시작하면 모든 기능이 정상 작동합니다.
